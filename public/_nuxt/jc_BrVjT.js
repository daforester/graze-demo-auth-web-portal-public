var f=Object.defineProperty;var d=(o,e,t)=>e in o?f(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var a=(o,e,t)=>d(o,typeof e!="symbol"?e+"":e,t);import{E as u}from"./B5CZD0j7.js";import{O as l,b as p}from"./JhrxTPuU.js";const n=class n{constructor(e=[],t=u.getInstance()){a(this,"emitter");a(this,"tokens",[]);if(this.tokens=e,this.emitter=t,e.length===0){const s=localStorage.getItem("managedTokens");if(s!=null&&s!=="")try{this.tokens=JSON.parse(s),this.tokens.forEach(i=>{const r=JSON.stringify(i.OAuthToken),h=new l;h.parseJSON(r),i.OAuthToken=h;const m=JSON.stringify(i.OAuthConfig),c=new p;c.parseJSON(m),i.OAuthConfig=c})}catch(i){console.error(i)}}this.init()}init(){localStorage.setItem("managedTokens",JSON.stringify(this.tokens)),this.tokens.forEach(e=>{this.startTimer(e,1)})}static getInstance(e=[],t=void 0){return n.instance===void 0?n.instance=new n(e,t):(e.length>0&&(n.instance.tokens.forEach(s=>{s.Timer!==null&&clearTimeout(s.Timer)}),n.instance.tokens=e,n.instance.init()),t&&(n.instance.emitter=t)),n.instance}emitSessionExpired(e){this.emitter.emit("tokenManager.sessionExpired",e)}addToken(e){this.tokens.filter((s,i)=>s.Service===e.Service).forEach(s=>{s.Timer!==null&&clearTimeout(s.Timer)}),this.tokens=this.tokens.filter((s,i)=>s.Service!==e.Service),this.startTimer(e,1),this.tokens.push(e),localStorage.setItem("managedTokens",JSON.stringify(this.tokens))}getTokenByService(e){return this.tokens.find(t=>t.Service===e)}getTokenStringByService(e){var t;return(t=this.getTokenByService(e))==null?void 0:t.OAuthToken}removeTokensByService(e){this.tokens.forEach(t=>{t.Service===e&&(this.removeToken(t),this.emitSessionExpired(t))}),localStorage.setItem("managedTokens",JSON.stringify(this.tokens))}parseTokenResponse(e,t){e.OAuthToken.AccessToken=t.access_token,e.OAuthToken.RefreshToken=t.refresh_token,e.OAuthToken.TokenType=t.token_type,e.OAuthToken.ExpiresIn=t.expires_in,this.tokenUpdated(e)}async refreshToken(e){let t;const s=new Headers;if(s.append("Content-Type","application/json"),e.Method.toLowerCase()==="header"){const i=e.OAuthToken.RefreshToken||e.OAuthToken.AccessToken;e.Header.toLowerCase()==="Authorization".toLowerCase()?s.append("Authorization",`Bearer ${i}`):s.append(e.Header,i)}else if(e.Header){const i={};i[e.Header]=e.OAuthToken.RefreshToken||e.OAuthToken.AccessToken,t=i}try{const i=await fetch(`${e.Endpoint}`,{method:e.Method.toUpperCase()==="POST"?"POST":"GET",headers:s,redirect:"follow",...t});if(i.status===401)return this.removeToken(e),this.emitSessionExpired(e),!1;if(i.status!==200)return await this.retryTokenRefresh(e);i.json().then(r=>{this.parseTokenResponse(e,r)})}catch{return await this.retryTokenRefresh(e)}return!0}retryTokenRefresh(e){return new Promise((t,s)=>{this.accessTimeRemaining(e)>0?e.Timer||(e.Timer=setTimeout(()=>{e.Timer=void 0,this.refreshToken(e).then(r=>r?t(r):s(r)).catch(()=>{s(!1)})},1e4)):(this.removeToken(e),this.emitSessionExpired(e))})}startTimer(e,t=0){let s=this.accessTimeRemaining(e);if(s<0){this.removeToken(e),this.emitSessionExpired(e);return}s-1e3*600<0&&(s=20),e.Timer||(e.Timer=setTimeout(()=>{e.Timer=void 0,this.refreshToken(e).then(()=>{}).catch(()=>{})},t||s-10))}accessTimeRemaining(e){const t=new Date;return new Date(e.Expires-t.getTime()).getTime()}removeToken(e){e.Timer!==null&&clearTimeout(e.Timer);const t=this.tokens.findIndex(s=>s===e);t>=0&&this.tokens.splice(t,1),localStorage.setItem("managedTokens",JSON.stringify(this.tokens))}tokenUpdated(e){this.startTimer(e),localStorage.setItem("managedTokens",JSON.stringify(this.tokens)),this.emitter.emit("tokenManager.tokenUpdated",e)}};a(n,"instance");let T=n;export{T};
